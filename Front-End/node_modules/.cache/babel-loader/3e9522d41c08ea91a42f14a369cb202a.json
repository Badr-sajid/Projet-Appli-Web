{"ast":null,"code":"var _jsxFileName = \"/home/issam/Desktop/Projet React/try/src/TestPage.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TestPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    const response = fetch(\"https://jsonplaceholder.typicode.com/users\", {\n      method: \"GET\",\n      // *Type of request GET, POST, PUT, DELETE\n      mode: \"cors\",\n      // Type of mode of the request\n      cache: \"no-cache\",\n      // options like default, no-cache, reload, force-cache\n      credentials: \"same-origin\",\n      // options like include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\" // request content type\n\n      },\n      redirect: \"follow\",\n      // manual, *follow, error\n      referrerPolicy: \"no-referrer\" // no-referrer, *client\n      // body: JSON.stringify(data) // Attach body with the request\n\n    });\n    this.setState({\n      users: response.json()\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Erreur : \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Chargement\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item.reponse\n          }, item.reponse, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 10\n      }, this);\n    }\n  }\n\n}\n\nexport default TestPage;","map":{"version":3,"sources":["/home/issam/Desktop/Projet React/try/src/TestPage.js"],"names":["React","Component","TestPage","constructor","props","state","error","isLoaded","items","componentDidMount","response","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","setState","users","json","render","message","map","item","reponse"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAGA,MAAMC,QAAN,SAAuBF,KAAK,CAACC,SAA7B,CAAuC;AAInCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAIDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,QAAQ,GAAIC,KAAK,CAAC,4CAAD,EAA+C;AACpEC,MAAAA,MAAM,EAAE,KAD4D;AACrD;AACfC,MAAAA,IAAI,EAAE,MAF8D;AAEtD;AACdC,MAAAA,KAAK,EAAE,UAH6D;AAGjD;AACnBC,MAAAA,WAAW,EAAE,aAJuD;AAIxC;AAC5BC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT,CAC4B;;AAD5B,OAL2D;AAQpEC,MAAAA,QAAQ,EAAE,QAR0D;AAQhD;AACpBC,MAAAA,cAAc,EAAE,aAToD,CASrC;AAC/B;;AAVoE,KAA/C,CAAvB;AAYA,SAAKC,QAAL,CAAc;AAAEC,MAAAA,KAAK,EAAGV,QAAQ,CAACW,IAAT;AAAV,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhB,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKH,KAAxC;;AACA,QAAIC,KAAJ,EAAW;AACT,0BAAO;AAAA,gCAAeA,KAAK,CAACiB,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAI,CAAChB,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,0BACC;AAAA,+BACC;AAAA,oBACGC,KAAK,CAACgB,GAAN,CAAUC,IAAI,iBACb;AAAA,sBACGA,IAAI,CAACC;AADR,aAASD,IAAI,CAACC,OAAd;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD;AAYD;AACF;;AAnDkC;;AAsDvC,eAAexB,QAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nclass TestPage extends React.Component {\n\n\n    \n    constructor(props) {\n      super(props);\n      this.state = {\n        error: null,\n        isLoaded: false,\n        items: []\n      };\n    }\n\n\n\n    componentDidMount() {\n      const response =  fetch(\"https://jsonplaceholder.typicode.com/users\", {\n        method: \"GET\", // *Type of request GET, POST, PUT, DELETE\n        mode: \"cors\", // Type of mode of the request\n        cache: \"no-cache\", // options like default, no-cache, reload, force-cache\n        credentials: \"same-origin\", // options like include, *same-origin, omit\n        headers: {\n          \"Content-Type\": \"application/json\" // request content type\n        },\n        redirect: \"follow\", // manual, *follow, error\n        referrerPolicy: \"no-referrer\", // no-referrer, *client\n        // body: JSON.stringify(data) // Attach body with the request\n      });\n      this.setState({ users:  response.json() });\n    }\n  \n    render() {\n      const { error, isLoaded, items } = this.state;\n      if (error) {\n        return <div>Erreur : {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Chargementâ€¦</div>;\n      } else {\n        return (\n         <div>\n          <ul>\n            {items.map(item => (\n              <li key={item.reponse}>\n                {item.reponse} \n              </li>\n            ))}\n          </ul>\n             \n         </div>\n        );\n      }\n    }\n  }\n\nexport default TestPage;"]},"metadata":{},"sourceType":"module"}