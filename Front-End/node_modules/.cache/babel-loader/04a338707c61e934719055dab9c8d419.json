{"ast":null,"code":"var _jsxFileName = \"/Users/badrsajid/Downloads/try 3/src/TestPage.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TestPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/Web-Project/project/GetQuestion\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    }, // Remarque : il est important de traiter les erreurs ici\n    // au lieu d'utiliser un bloc catch(), pour ne pas passer à la trappe\n    // des exceptions provenant de réels bugs du composant.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Erreur : \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 16\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Chargement\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item.reponse\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }, this);\n    }\n  }\n\n}\n\nexport default TestPage;","map":{"version":3,"sources":["/Users/badrsajid/Downloads/try 3/src/TestPage.js"],"names":["React","Component","TestPage","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","render","message","map","item","reponse","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAGA,MAAMC,QAAN,SAAuBF,KAAK,CAACC,SAA7B,CAAuC;AAInCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAIDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,uDAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEM;AAFK,OAAd;AAID,KARL,EASI;AACA;AACA;AACCR,IAAAA,KAAD,IAAW;AACT,WAAKS,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAjBL;AAmBC;;AAELU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKH,KAAxC;;AACA,QAAIC,KAAJ,EAAW;AACT,0BAAO;AAAA,gCAAeA,KAAK,CAACW,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAI,CAACV,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,0BACC;AAAA,+BACC;AAAA,oBACGC,KAAK,CAACU,GAAN,CAAUC,IAAI,iBACb;AAAA,sBACGA,IAAI,CAACC;AADR,aAASD,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD;AAYD;AACF;;AAzDkC;;AA4DvC,eAAenB,QAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nclass TestPage extends React.Component {\n\n\n    \n    constructor(props) {\n      super(props);\n      this.state = {\n        error: null,\n        isLoaded: false,\n        items: []\n      };\n    }\n\n\n\n    componentDidMount() {\n        fetch(\"http://localhost:8080/Web-Project/project/GetQuestion\")\n          .then(res => res.json())\n          .then(\n            (result) => {\n              this.setState({\n                isLoaded: true,\n                items: result\n              });\n            },\n            // Remarque : il est important de traiter les erreurs ici\n            // au lieu d'utiliser un bloc catch(), pour ne pas passer à la trappe\n            // des exceptions provenant de réels bugs du composant.\n            (error) => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n          )\n        }\n  \n    render() {\n      const { error, isLoaded, items } = this.state;\n      if (error) {\n        return <div>Erreur : {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Chargement…</div>;\n      } else {\n        return (\n         <div>\n          <ul>\n            {items.map(item => (\n              <li key={item.id}>\n                {item.reponse}\n              </li>\n            ))}\n          </ul>\n             \n         </div>\n        );\n      }\n    }\n  }\n\nexport default TestPage;"]},"metadata":{},"sourceType":"module"}