{"ast":null,"code":"var _jsxFileName = \"/home/issam/Desktop/Projet React/try/src/TestPage.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TestPage extends Component {\n  constructor() {\n    super();\n    this.getUsers = this.getUsers.bind(this);\n  }\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  async getUsers() {\n    // With error handling\n    let body = {\n      userId: 1111,\n      title: \"This is POST request with body\",\n      completed: true\n    };\n    fetch(\"https://jsonplaceholder.typicode.com/todos\", {\n      method: \"POST\",\n      body: JSON.stringify(body)\n    }).then(response => {\n      let json = response.json();\n      console.log(json);\n      this.setState({\n        users: json\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n\n      return response.blob();\n    }).catch(error => {\n      console.error(\"There has been a problem with your fetch operation:\", error);\n    });\n  }\n\n  render() {\n    const {\n      users\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Using Fetch in React for API call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), users && users.map((user, index) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.name\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 20\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TestPage;","map":{"version":3,"sources":["/home/issam/Desktop/Projet React/try/src/TestPage.js"],"names":["React","Component","TestPage","constructor","getUsers","bind","componentDidMount","body","userId","title","completed","fetch","method","JSON","stringify","then","response","json","console","log","setState","users","ok","Error","blob","catch","error","render","state","map","user","index","name","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAGA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC/BE,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,QAAL;AACD;;AAEa,QAARA,QAAQ,GAAG;AACf;AACA,QAAIG,IAAI,GAAG;AACTC,MAAAA,MAAM,EAAE,IADC;AAETC,MAAAA,KAAK,EAAE,gCAFE;AAGTC,MAAAA,SAAS,EAAE;AAHF,KAAX;AAKAC,IAAAA,KAAK,CAAC,4CAAD,EAA+C;AAClDC,MAAAA,MAAM,EAAE,MAD0C;AAElDL,MAAAA,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAeP,IAAf;AAF4C,KAA/C,CAAL,CAIGQ,IAJH,CAIQC,QAAQ,IAAI;AAChB,UAAIC,IAAI,GAAGD,QAAQ,CAACC,IAAT,EAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAKG,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEJ;AAAT,OAAd;;AACA,UAAI,CAACD,QAAQ,CAACM,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;AACD;;AACD,aAAOP,QAAQ,CAACQ,IAAT,EAAP;AACD,KAZH,EAaGC,KAbH,CAaSC,KAAK,IAAI;AACdR,MAAAA,OAAO,CAACQ,KAAR,CACE,qDADF,EAEEA,KAFF;AAID,KAlBH;AAmBD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEN,MAAAA;AAAF,QAAY,KAAKO,KAAvB;AACA,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGP,KAAK,IACJA,KAAK,CAACQ,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzB,4BAAO;AAAA,oBAAkBD,IAAI,CAACE;AAAvB,WAAQF,IAAI,CAACG,EAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,CAJJ,eAOE;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAnD8B;;AAsDjC,eAAe/B,QAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nclass TestPage extends Component {\n  constructor() {\n    super();\n    this.getUsers = this.getUsers.bind(this);\n  }\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  async getUsers() {\n    // With error handling\n    let body = {\n      userId: 1111,\n      title: \"This is POST request with body\",\n      completed: true\n    };\n    fetch(\"https://jsonplaceholder.typicode.com/todos\", {\n      method: \"POST\",\n      body: JSON.stringify(body)\n    })\n      .then(response => {\n        let json = response.json();\n        console.log(json);\n        this.setState({ users: json })\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.blob();\n      })\n      .catch(error => {\n        console.error(\n          \"There has been a problem with your fetch operation:\",\n          error\n        );\n      });\n  }\n\n  render() {\n    const { users } = this.state;\n    return (\n      <div>\n        <h3>Using Fetch in React for API call</h3>\n        <hr />\n        {users &&\n          users.map((user, index) => {\n            return <p key={user.id}>{user.name}</p>;\n          })}\n        <div />\n      </div>\n    );\n  }\n}\n\nexport default TestPage;"]},"metadata":{},"sourceType":"module"}